@model IEnumerable<UserFile> 
@{
    ViewData["Title"] = "Dashboard";
}

<header class="flex items-center bg-white shadow p-3">
    <img src="https://source.boringavatars.com/marble/120/0x05E4193Db127fC3Ed080B85c37e0F4eC8fCAd8fD?colors=264653,2a9d8f,e9c46a,f4a261,e76f51"
        class="w-10 h-10 mr-3" alt="">
    <a href="/logout" class="flex flex-col">
        <span class="text-sm font-bold mb-1">0x05E4...d8fD</span>
        <small class="text-xs font-light text-slate-500">Disconnect</small>
    </a>
    <button type="button" class="flex flex-col items-end cursor-pointer ml-auto" id="add-funds-btn">
        <span class="text-sm font-medium mb-1">@(ViewBag.Balance) Boba</span>
        <small class="text-xs font-light text-emerald-600">Add Funds</small>
    </button>
</header>
<div class="overflow-y-auto flex flex-col" id="scroll-wrapper">
    <section class="flex flex-col flex-grow bg-slate-100 pb-3" id="file-container">
        @if(Model.Any())
        {
            foreach (var file in Model)
            {
                @await Html.PartialAsync("~/Views/Shared/_UserFilePartial.cshtml", file);
            }
        }
        else
        {
            <div class="empty-state flex flex-col items-center text-center m-auto max-w-min">
                <svg role="img" class="h-64 w-64 mx-5">
                    <use xlink:href="/img/sprite.svg#illustration-empty"></use>
                </svg>
                <h2 class="font-medium text-lg mb-2">This place looks empty!</h2>
                <span class="font-light text-sm text-slate-500">Upload a file or send a message and have it stored as a .txt
                    file</span>
            </div>
        }
    </section>
</div>
<footer class="flex bg-white shadow p-3">
    <label for="file-input" class="btn cursor-pointer mr-3">
        <div class="loader">
            <svg role="img" class="animate-spin w-6 h-6">
                <use xlink:href="/img/sprite.svg#icon-loader"></use>
            </svg>
        </div>
        <span class="text">
            <svg role="img" class="h-6 w-6">
                <use xlink:href="/img/sprite.svg#icon-upload-cloud"></use>
            </svg>
        </span>
    </label>
    <form action="" class="flex-grow" id="text-upload">
        <div class="input-wrapper group m-0">
            <input type="text" id="text-input" class="input pr-20" placeholder="Or write here to upload as .txt" autocomplete="off">
            <div class="input-icon invisible group-focus-within:visible">
                <button class="btn btn-sm" type="submit">
                    <div class="loader">
                        <svg role="img" class="animate-spin w-6 h-6">
                            <use xlink:href="/img/sprite.svg#icon-loader"></use>
                        </svg>
                    </div>
                    <span class="text">send</span>
                </button>
            </div>
        </div>
    </form>
    <form action="" enctype="multipart/form-data" id="upload-form">
        <input type="file" name="file" id="file-input" class="hidden">
    </form>
</footer>
@* MODALS *@
<div class="modal" id="file-preview-modal">
    <div class="modal-body">
        <div class="modal-header">
            <h2>Upload Confirm</h2>
            <button type="button" class="btn-icon modal-close">
                <svg role="img" class="h-5 w-5">
                    <use xlink:href="/img/sprite.svg#icon-x"></use>
                </svg>
            </button>
        </div>
        <div class="modal-content"></div>
        <form action="" id="file-submit-form" class="flex flex-col mt-4">
            <p class="text-sm text-gray-600 mb-4">
                Uploading this file will cost you <strong class="font-medium"><span id="file-size"></span> Boba</strong>.
            </p>
            <button type="submit" id="upload-confirm-btn" class="btn mt-2">
                <div class="loader">
                    <svg role="img" class="animate-spin w-6 h-6">
                        <use xlink:href="/img/sprite.svg#icon-loader"></use>
                    </svg>
                </div>
                <span class="text">Upload File</span>
            </button>
        </form>
    </div>
</div>
<div class="modal" id="funding-modal">
    <div class="modal-body">
        <div class="modal-header">
            <h2>Fund Account</h2>
            <button type="button" class="btn-icon modal-close">
                <svg role="img" class="h-5 w-5">
                    <use xlink:href="/img/sprite.svg#icon-x"></use>
                </svg>
            </button>
        </div>
        <div class="modal-content"></div>
        <form action="" id="file-submit-form" class="flex flex-col mt-4">
            <p class="text-sm text-gray-600 mb-4">
                How much do you want to fund your account?(in Boba)
            </p>
            <input type="text" inputmode="decimal" class="input" id="funds-amount-input">
            <button type="submit" id="confirm-funds-btn" class="btn mt-2">
                <div class="loader">
                    <svg role="img" class="animate-spin w-6 h-6">
                        <use xlink:href="/img/sprite.svg#icon-loader"></use>
                    </svg>
                </div>
                <span class="text">Confirm</span>
            </button>
        </form>
    </div>
</div>
<div class="modal" id="alert-modal">
    <div class="modal-body">
        <div class="modal-header">
            <h2 class="status-txt"></h2>
            <button type="button" class="btn-icon modal-close">
                <svg role="img" class="h-5 w-5">
                    <use xlink:href="/img/sprite.svg#icon-x"></use>
                </svg>
            </button>
        </div>
        <div>
            <p class="error-txt text-sm text-gray-600 mb-3"></p>
            <button type="submit" class="modal-close btn mt-2">
                Close
            </button>
        </div>
    </div>
</div>

@section Scripts {
<script src="~/web3/web3.min.js"></script>
<script>
    const web3 = new window.Web3(window.ethereum);
    $(document).on('click', '#add-funds-btn', function() {
        showModal($('#funding-modal'));
    });
    $(document).on('click', '#confirm-funds-btn', function () {
        const abi = [{
            "constant": false,
            "inputs": [
                {
                    "name": "_to",
                    "type": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "type": "function"
        }];
        const contract_address = '0xF5B97a4860c1D81A1e915C40EcCB5E4a5E6b8309';
        const addr = ethereum.selectedAddress;
        const amount = web3.utils.toWei($('#funds-amount-input').val(), 'ether');
        const contract = new web3.eth.Contract(abi, contract_address).methods.transfer(addr, amount).send({
            from: addr,
            value: web3.utils.toWei('0', 'ether')
        })
            .then(function (receipt) {
                $('#funds-amount-input').val('');
                $.post('/fund', {
                    txid: receipt.transactionHash,
                    amount: $('#funds-amount-input').val()
                })
                    .done(function (data) {
                        if (data == true) {
                            location.reload();
                        }
                    })
            })
            .catch(function (error) {
                showAlert(error.message, 'error');
            });
    })

    $(document).on('change', ':file', function () {
        var input = $(this);
        var file = this.files[0];
        if (file.size > 20000000) {
            input.val('');
            showAlert('File size is too big', 'error');
            return;
        }
        $('label[for="file-input"]').attr('disabled', 'disabled').addClass('loading');
        $.get('/GetFee?length=' + file.size)
            .done(function(response) {
                $('#file-size').text(response);
                showModal($('#file-preview-modal'));
            })
            .fail(function(error) {
                showAlert(error, 'error');
            })
            .always(function() {
                $('label[for="file-input"]').removeAttr('disabled').removeClass('loading');
            });
    });
    $(document).on('submit', '#file-submit-form', function(e) {
        e.preventDefault();
        var btn = $('#upload-confirm-btn');
        btn.attr('disabled', 'disabled').addClass('loading');
        $('#upload-form').submit();
    });
    $(document).on('submit', '#upload-form', function (e) {
        e.preventDefault();
        var form = $(this);
        $.ajax({
            url: '/upload',
            type: 'POST',
            data: new FormData(form[0]),
            cache: false,
            contentType: false,
            processData: false,
        })
            .done(function(response) {
                hideModal($('#file-preview-modal'));
                $('#text-input').val('');
                $('.empty-state').remove();
                $('#file-container').append(response);
                $('#scroll-wrapper').animate({
                    scrollTop: $('#scroll-wrapper')[0].scrollHeight
                }, 1000);
            })
            .fail(function(error) {
                showAlert(error, 'error');
            })
            .always(function() {
                $('#upload-confirm-btn').removeAttr('disabled').removeClass('loading');
            });
    });

    $(document).on('submit', '#text-upload', function(e) {
        e.preventDefault();
        const inputVal = $('#text-input').val();
        const fileName = Date.now() + '.txt';
        const formData = new FormData();
        const file = new File([new Blob([inputVal])], fileName);
        const container = new DataTransfer();
        container.items.add(file);
        $(':file')[0].files = container.files;
        $(':file').trigger('change');
    });

    function showAlert(message, type) {
        $('#alert-modal .status-txt').text(type == 'error' ? 'Error' : 'Success');
        $('#alert-modal .error-txt').text(message);
        showModal($('#alert-modal'));
    }
</script>
}